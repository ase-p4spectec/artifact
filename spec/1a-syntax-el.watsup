;;
;; Numbers
;;

syntax bits = int
syntax width = nat

syntax num =
  | INT int         hint(show %)
  | FINT width bits   hint(show %#S#%)
  | FBIT width bits   hint(show %#W#%)

;;
;; Texts
;;

;;
;; Identifiers
;;

syntax id = text

;;
;; Variables (scoped identifiers)
;;

syntax name =
  | TOP id      hint(show .%)
  | CURRENT id  hint(show %)

;;
;; Members
;;

syntax member = id

;;
;; Match kinds
;;

syntax matchkind = id

;;
;; State labels
;;

syntax statelabel = id

;;
;; Unary operators
;;

syntax unop =
  | BNOT    hint(show %latex("\\sim"))
  | LNOT    hint(show %latex("!"))
  | UPLUS   hint(show %latex("+"))
  | UMINUS  hint(show %latex("-"))

;;
;; Binary operators
;;

syntax binop =
  | PLUS    hint(show %latex("+"))
  | SPLUS   hint(show %latex("|")#%latex("+")#%latex("|"))
  | MINUS   hint(show %latex("-"))
  | SMINUS  hint(show %latex("|")#%latex("-")#%latex("|"))
  | MUL     hint(show %latex("*"))
  | DIV     hint(show %latex("/"))
  | MOD     hint(show %latex("\\%"))
  | SHL     hint(show %latex("<\\!<"))
  | SHR     hint(show %latex(">\\!>"))
  | LE      hint(show %latex("\\leq"))
  | GE      hint(show %latex("\\geq"))
  | LT      hint(show %latex("<"))
  | GT      hint(show %latex(">"))
  | EQ      hint(show %latex("=="))
  | NE      hint(show %latex("!\\!="))
  | BAND    hint(show %latex("\\&"))
  | BXOR    hint(show %latex("\\wedge"))
  | BOR     hint(show %latex("|"))
  | CONCAT  hint(show %latex("++"))
  | LAND    hint(show %latex("\\&\\&"))
  | LOR     hint(show %latex("||"))

;;
;; Directions
;;

syntax dir = | NO | IN | OUT | INOUT

;;
;; Forward declarations of mutually recursive syntax
;;

syntax expr, stmt, switchcase, decl, tblprop

;;
;; Types
;;

syntax type =
  | VoidT              hint(show VOID)
  | ErrT               hint(show ERROR)
  | MatchKindT         hint(show MATCH_KIND)
  | StrT               hint(show STRING)
  | BoolT              hint(show BOOL)
  | IntT               hint(show INT)
  | FIntT expr         hint(show INT#%latex("\\langle")#%#%latex("\\rangle"))
  | FBitT expr         hint(show BIT#%latex("\\langle")#%#%latex("\\rangle"))
  | VBitT expr         hint(show VARBIT#%latex("\\langle")#%#%latex("\\rangle"))
  | StackT type expr   hint(show %#`[%])
  | ListT type         hint(show LIST#%latex("\\langle")#%#%latex("\\rangle"))
  | TupleT type*       hint(show TUPLE#%latex("\\langle")#%#%latex("\\rangle"))
  | NameT name         hint(show %)
  | SpecT name type*   hint(show %#%latex("\\langle")#%#%latex("\\rangle"))
  | AnyT               hint(show _)

;;
;; Type parameters
;;

syntax tparam = id

;;
;; Parameters
;;

syntax param = id dir type expr?

;;
;; Constructor parameters
;;

syntax cparam = param

;;
;; Type arguments
;;

syntax targ = type

;;
;; Arguments
;;

syntax arg =
  | ExprA expr      hint(show %)
  | NameA id expr?  hint(show % = %)
  | AnyA            hint(show _)

;;
;; Keyset expressions
;;

syntax keyset =
  | ExprK expr  hint(show %)
  | DefaultK    hint(show DEFAULT)
  | AnyK        hint(show _)

;;
;; Select-cases for select
;;

syntax selectcase = keyset* statelabel

;;
;; Expressions
;; (TODO) disambiguate CallFuncE and InstE with typename syntax
;;

syntax expr =
  | BoolE bool                            hint(show %)
  | StrE text                             hint(show %)
  | NumE num                              hint(show %)
  | NameE name                            hint(show %)
  | SeqE expr*                            hint(show %latex("\\{")#%#%latex("\\}"))
  | SeqDefaultE expr*                     ;;hint(show %latex("\\{")#%, ... %latex("\\}"))
  | RecordE (member, expr)*               hint(show %latex("\\{")#%#%latex("\\}"))
  | RecordDefaultE (member, expr)*        ;;hint(show %latex("\\{")#%, ... %latex("\\}"))
  | DefaultE                              hint(show ...%latex())
  | InvalidE                              hint(show INVALID)
  | UnE unop expr                         hint(show %#%)
  | BinE binop expr expr                  hint(show %2 %1 %3)
  | TernE expr expr expr                  hint(show (% %latex("?") % `: %))
  | CastE type expr                       hint(show (%) %)
  | MaskE expr expr                       hint(show % %latex("\\&\\&\\&") %)
  | RangeE expr expr                      hint(show % ... %)
  | SelectE expr* selectcase*             hint(show SELECT (%) %latex("\\{")#%#%latex("\\}"))
  | ArrAccE expr expr                     hint(show %`[%])
  | BitAccE expr expr expr                hint(show %`[% `: %])
  | ErrAccE member                        hint(show ERROR.%)
  | TypeAccE name member                  hint(show %.%)
  | ExprAccE expr member                  hint(show %.%)
  | CallFuncE name targ* arg*             hint(show %#%latex("\\langle")#%#%latex("\\rangle")#(%)#%latex())
  | CallMethodE expr member targ* arg*    hint(show %1#%latex("\\langle")#%3#%latex("\\rangle").%2#(%4)#%latex())
  | CallTypeE name member targ* arg*      hint(show %1#%latex("\\langle")#%3#%latex("\\rangle").%2#(%4)#%latex())
  | InstE name targ* arg*                 hint(show %#%latex("\\langle")#%#%latex("\\rangle")#(%)#%latex())

;;
;; Blocks (sequence of statements)
;;

syntax block = BlockB stmt*   hint(show %latex("\\{")#%#%latex("\\}"))

;;
;; Statements
;;

syntax stmt =
  | EmptyS                                hint(show EMPTY)
  | AssignS expr expr                     hint(show % = %)
  | SwitchS expr switchcase*              hint(show SWITCH (%) %latex("\\{")#%#%latex("\\}"))
  | IfS expr stmt stmt                    hint(show IF (%) THEN % ELSE %)
  | BlockS block                          hint(show %)
  | ExitS                                 hint(show EXIT)
  | RetS expr?                            hint(show RETURN %)
  | CallFuncS name targ* arg*             hint(show %#%latex("\\langle")#%#%latex("\\rangle")#%#%latex())
  | CallMethodS expr member targ* arg*    hint(show %1#%latex("\\langle")#%3#%latex("\\rangle").%2#(%4)#%latex())
  | CallInstS name targ* arg*             hint(show %#%latex("\\langle")#%#%latex("\\rangle").APPLY#(%)#%latex())
  | TransS expr                           hint(show TRANSITION %)
  | DeclS decl                            hint(show %)

;;
;; Match labels and cases for switch
;;

syntax switchlabel =
  | ExprL expr  hint(show %)
  | DefaultL    hint(show DEFAULT)

syntax switchcase =
  | MatchC switchlabel block  hint(show CASE % %)
  | FallC switchlabel         hint(show CASE %)

;;
;; Parser state machine
;;

syntax parserstate = statelabel block

;;
;; Tables
;;

syntax tbl = tblprop*

;;
;; Table keys
;;

syntax tblkey = expr matchkind
syntax tblkeyprop = tblkey*

;;
;; Table actions
;;

syntax tblaction = name arg*
syntax tblactionprop = tblaction*

;;
;; Table entries
;;

syntax tblentry = bool keyset* tblaction expr?
syntax tblentryprop = bool tblentry*

;;
;; Table default properties
;;

syntax tbldefaultprop = bool tblaction

;;
;; Table custom properties
;;

syntax tblcustomprop = bool member expr

;;
;; Table properties
;;

syntax tblprop =
  | KeyP tblkeyprop           hint(show KEYS %latex("\\{")#%#%latex("\\}"))
  | ActionP tblactionprop     hint(show ACTIONS %latex("\\{")#%#%latex("\\}"))
  | EntryP tblentryprop       hint(show ENTRIES %latex("\\{")#%#%latex("\\}"))
  | DefaultP tbldefaultprop   hint(show DEFAULT#_#ACTION %latex("\\{")#%#%latex("\\}"))
  | CustomP tblcustomprop     hint(show CUSTOM %latex("\\{")#%#%latex("\\}"))

;;
;; Methods
;;

syntax method =
  | ExternConsM id cparam*                      hint(show %(%))
  | ExternAbstractM id type tparam* param*      hint(show ABSTRACT %2 %1#%latex("\\langle")#%3#%latex("\\rangle")#(%4)#%latex())
  | ExternM id type tparam* param*              hint(show %2 %1#%latex("\\langle")#%3#%latex("\\rangle")#(%4)#%latex())

;;
;; Declarations
;;

syntax typedef

syntax decl =
  | ConstD id type expr                                       hint(show CONST %2 %1 = %3)
  | VarD id type expr?                                        hint(show %2 %1 = %3)
  | ErrD member*                                              hint(show ERROR %latex("\\{")#%#%latex("\\}"))
  | MatchKindD member*                                        hint(show MATCH#_#KIND %latex("\\{")#%#%latex("\\}"))
  | InstD id name targ* arg* decl*                            hint(show %2#%latex("\\langle")#%3#%latex("\\rangle")#(%4) %1 = %latex("\\{")#%5#%latex("\\}"))
  | StructD id tparam* (member, type)*                        hint(show STRUCT %#%latex("\\langle")#%#%latex("\\rangle") %latex("\\{")#%#%latex("\\}"))
  | HeaderD id tparam* (member, type)*                        hint(show HEADER %#%latex("\\langle")#%#%latex("\\rangle") %latex("\\{")#%#%latex("\\}"))
  | UnionD id tparam* (member, type)*                         hint(show UNION %#%latex("\\langle")#%#%latex("\\rangle") %latex("\\{")#%#%latex("\\}"))
  | EnumD id member*                                          hint(show ENUM % %latex("\\{")#%#%latex("\\}"))
  | SEnumD id type (member, expr)*                            hint(show ENUM % % %latex("\\{")#%#%latex("\\}"))
  | NewTypeD id typedef                                       hint(show TYPE % %)
  | TypeDefD id typedef                                       hint(show TYPEDEF % %)
  | ValueSetD id type expr                                    hint(show VALUE#_#SET#%latex("\\langle")#%2#%latex("\\rangle")#(%3)#%latex() %1)
  | ParserTypeD id tparam* param*                             hint(show PARSER %#%latex("\\langle")#%#%latex("\\rangle")#(%)#%latex())
  | ParserD id param* cparam* decl* parserstate*              hint(show PARSER %#(%)#(%)#%latex() %latex("\\{")#%%#%latex("\\}"))
  | TableD id tbl                                             hint(show TABLE % %latex("\\{")#%#%latex("\\}"))
  | ControlTypeD id tparam* param*                            hint(show CONTROL %#%latex("\\langle")#%#%latex("\\rangle")#(%)#%latex())
  | ControlD id param* cparam* decl* block                    hint(show CONTROL %#(%)#(%)#%latex() %latex("\\{")#% APPLY %#%latex("\\}"))
  | ActionD id param* block                                   hint(show ACTION %(%) %)
  | FuncD id type tparam* param* block                        hint(show %2 %1#%latex("\\langle")#%3#%latex("\\rangle")#(%4)#%latex() %5)
  | ExternFuncD id type tparam* param*                        hint(show EXTERN %2 %1#%latex("\\langle")#%3#%latex("\\rangle")#(%4)#%latex())
  | ExternObjectD id tparam* method*                          hint(show EXTERN %#%latex("\\langle")#%#%latex("\\rangle") %latex("\\{")#%#%latex("\\}"))
  | PackageTypeD id tparam* cparam*                           hint(show PACKAGE %#%latex("\\langle")#%#%latex("\\rangle")#(%)#%latex())

syntax typedef =
  | TypeD type
  | DeclD decl

;;
;; Program
;;

syntax program = decl*
