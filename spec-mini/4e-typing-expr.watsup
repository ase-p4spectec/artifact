;;
;; Number expression
;;

rule Expr_ok/inte:
  C |- IntE i : IntE i `(IntT)

rule Expr_ok/finte:
  C |- FIntE w i : FIntE w bs `(FIntT w)
  -- if bs = $to_bitstr(w, i)

rule Expr_ok/fbite:
  C |- FBitE w i : FBitE w bs `(FBitT w)
  -- if bs = $to_bitstr(w, i)

;;
;; Variable expression
;;

rule Expr_ok/namee:
  C |- NameE id : NameE id `(typ)
  -- if typ = $find_frames(C, id)

;;
;; Binary expression
;;

dec $compatible_plusminusmult(typ, typ) : bool

def $compatible_plusminusmult(FIntT w, FIntT w) = true
def $compatible_plusminusmult(FBitT w, FBitT w) = true
def $compatible_plusminusmult(typ_l, typ_r) = false
  -- otherwise

rule Expr_ok/bine-plus-minus-mult:
  C |- BinE binop expr_l expr_r : BinE binop exprIL_l exprIL_r `(typ_l)
  -- if binop <- [ PLUS, MINUS ]
  ----
  -- Expr_ok: C |- expr_l : exprIL_l
  -- Expr_ok: C |- expr_r : exprIL_r
  ----
  -- if `(typ_l) = $typeof(exprIL_l)
  -- if `(typ_r) = $typeof(exprIL_r)
  ----
  -- if $compatible_plusminusmult(typ_l, typ_r)

dec $compatible_shift(typ, typ) : bool

def $compatible_shift(IntT, IntT) = true
def $compatible_shift(IntT, FIntT _) = true
def $compatible_shift(IntT, FBitT _) = true
def $compatible_shift(FIntT _, IntT) = true
def $compatible_shift(FIntT _, FIntT _) = true
def $compatible_shift(FIntT _, FBitT _) = true
def $compatible_shift(FBitT _, IntT) = true
def $compatible_shift(FBitT _, FIntT _) = true
def $compatible_shift(FBitT _, FBitT _) = true
def $compatible_shift(typ_l, typ_r) = false

rule Expr_ok/bine-shift:
  C |- BinE binop expr_l expr_r : BinE binop exprIL_l exprIL_r `(typ_l)
  -- if binop <- [ SHL, SHR ]
  ----
  -- Expr_ok: C |- expr_l : exprIL_l
  -- Expr_ok: C |- expr_r : exprIL_r
  ----
  -- if `(typ_l) = $typeof(exprIL_l)
  -- if `(typ_r) = $typeof(exprIL_r)
  ----
  -- if $compatible_shift(typ_l, typ_r)
  -- if $is_intt(typ_r) \/ $is_fintt(typ_r) => $is_ctk_non_neg(C, exprIL_r)

;;
;; Expression access expression
;;

rule Expr_ok/expracce-headert:
  C |- ExprAccE expr_b member : ExprAccE exprIL_b member `(typ)
  -- Expr_ok: C |- expr_b : exprIL_b
  -- if `(typ_b) = $typeof(exprIL_b)
  -- if HeaderT id_h (member_h, typ_h)* = typ_b
  ----
  -- if typ = $assoc_<member, typ>(member, (member_h, typ_h)*)
