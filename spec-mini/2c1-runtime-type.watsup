;;
;; Type
;;

syntax typ =
  | IntT
  | FIntT nat
  | FBitT nat
  | HeaderT id (member, typ)*

;;
;; Parameter Type
;;

syntax paramtyp = id dir typ

var pt : paramtyp

;;
;; Function Type
;;

syntax functyp = | FuncT paramtyp* typ

var ft : functyp

;;
;; Type helpers
;;

;; Type constructor checks

dec $is_intt(typ) : bool
def $is_intt(IntT) = true
def $is_intt(typ) = false
  -- otherwise

dec $is_fintt(typ) : bool
def $is_fintt(FIntT _) = true
def $is_fintt(typ) = false
  -- otherwise

dec $is_fbitt(typ) : bool
def $is_fbitt(FBitT _) = true
def $is_fbitt(typ) = false
  -- otherwise

dec $is_headert(typ) : bool
def $is_headert(HeaderT _ _) = true
def $is_headert(typ) = false
  -- otherwise

;;
;; Function type helpers
;;

;; Function type constructor checks

dec $is_funct(functyp) : bool
def $is_funct(FuncT _ _) = true
def $is_funct(functyp) = false
  -- otherwise
